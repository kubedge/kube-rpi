- name: fetch common files
  become: yes
  fetch: dest={{ backup_dir }}/{{ inventory_hostname_short }}{{ item }} src={{ item }} flat=yes
  with_items:
  - /etc/hosts
  - /etc/networks
  - /etc/hostname
  - /etc/network/interfaces
  - /var/lib/kubelet/config.yaml
  - /etc/dhcp/dhcpd.conf
  - /etc/dhcpcd.conf
  - /etc/resolv.conf
  - /etc/wpa_supplicant/wpa_supplicant.conf
  - /etc/default/isc-dhcp-server
  - /etc/hostapd/hostapd.conf
  - /etc/iptables.ipv4.nat
  - /etc/default/hostapd
  - /etc/sysctl.conf
  - /boot/cmdline.txt
  - /boot/config.txt
  - /boot/os-release
  - /etc/systemd/system/pan-network.service
  - /etc/systemd/system/bt-pan.service
  - /etc/systemd/system/blueagent5.service
  - /etc/systemd/system/custom.target
  - /usr/local/bin/blueagent5.py
  - /usr/local/bin/bt-pan.py
  - /usr/local/bin/pan-network.sh

- name: find interfaces files
  find:
    paths: /etc/network/interfaces.d/
  register: interface_files

- name: fetch interfaces files
  become: yes
  fetch: dest={{ backup_dir }}/{{ inventory_hostname_short }}{{ item.path }} src={{ item.path }} flat=yes
  with_items: "{{ interface_files.files }}"

- name: find kubernetes files
  find:
    paths: /etc/kubernetes/
    patterns: '*.conf,*.yaml'
    recurse: yes
  register: kubernetes_files

- name: fetch kubernetes files
  become: yes
  fetch: dest={{ backup_dir }}/{{ inventory_hostname_short }}{{ item.path }} src={{ item.path }} flat=yes
  with_items: "{{ kubernetes_files.files }}"

- name: find keys files
  find:
    paths: /etc/kubernetes/
    patterns: '*.crt,*.pub,*.key'
    recurse: yes
  register: kubernetes_keys

- name: create empty key
  become: yes
  fetch: dest={{ backup_dir }}/{{ inventory_hostname_short }}{{ item.path }} src=/dev/null flat=yes
  with_items: "{{ kubernetes_keys.files }}"

- name: find kubelet files
  find:
    paths: /etc/systemd/system/kubelet.service.d/
    patterns: '*.conf,*.yaml'
  register: kubelet_files

- name: fetch kubelet files
  become: yes
  fetch: dest={{ backup_dir }}/{{ inventory_hostname_short }}{{ item.path }} src={{ item.path }} flat=yes
  with_items: "{{ kubelet_files.files }}"

- name: find mount files
  find:
    paths: /etc/systemd/system/
    patterns: '*.mount'
  register: mount_files

- name: fetch mount files
  become: yes
  fetch: dest={{ backup_dir }}/{{ inventory_hostname_short }}{{ item.path }} src={{ item.path }} flat=yes
  with_items: "{{ mount_files.files }}"


